name: Unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install nightly
      uses: actions-rs/toolchain@v1
      with:
            toolchain: nightly
            profile: minimal
            components: rustfmt
    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
            toolchain: stable
            profile: minimal
            components: clippy

    - uses: Swatinem/rust-cache@v2

    - name: Check Formatting
      run: cargo +nightly fmt --all -- --check

    - uses: actions-rs/clippy-check@v1
      with:
        toolchain: stable
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --tests

  test:
    runs-on: ubuntu-latest
    name: test

    steps:
    - uses: actions/checkout@v3

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
            toolchain: stable
            profile: minimal
            override: true

    - uses: taiki-e/install-action@nextest
    - uses: Swatinem/rust-cache@v2

    - name: Run tests
      run: cargo +stable nextest run --verbose

    - name: Run doctests
      run: cargo +stable test --doc --verbose

  thirdparty-license:
    name: Check Datadog third-party license file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo tools
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-tools-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dd-rust-license-tool
        run: dd-rust-license-tool --help || cargo install dd-rust-license-tool

      - name: Check Datadog third-party license file
        run: dd-rust-license-tool check